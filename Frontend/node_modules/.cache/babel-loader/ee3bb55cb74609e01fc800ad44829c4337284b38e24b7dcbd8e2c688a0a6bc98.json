{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useAuthContext from \"../context/useAuthContext\";\nimport useMessage from \"../zustand/useMessage\";\nconst useGetMessages = () => {\n  _s();\n  //loading and error state\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  //custom hooks context\n  const {\n    user\n  } = useAuthContext();\n  const {\n    setMessages,\n    messages\n  } = useMessage();\n\n  //react router\n  const {\n    conversationId\n  } = useParams();\n  useEffect(() => {\n    const getMessages = async () => {\n      setIsLoading(true);\n      setError(null);\n      const response = await fetch(`/api/messages/${conversationId}`, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const responseJson = await response.json();\n      if (!response.ok) {\n        setIsLoading(false);\n        setError(responseJson.error);\n      }\n      if (response.ok) {\n        // setting the messages we retrieved from the db\n        setMessages(responseJson);\n        setIsLoading(false);\n      }\n    };\n    if (conversationId && user !== null) {\n      getMessages();\n    }\n  }, [conversationId, setMessages, user]);\n  return {\n    isLoading,\n    error,\n    messages\n  };\n};\n_s(useGetMessages, \"jqA/Ed+uUT9vcfSXBipDsjh6Cz0=\", false, function () {\n  return [useAuthContext, useMessage, useParams];\n});\nexport default useGetMessages;","map":{"version":3,"names":["useEffect","useState","useParams","useAuthContext","useMessage","useGetMessages","_s","isLoading","setIsLoading","error","setError","user","setMessages","messages","conversationId","getMessages","response","fetch","headers","Authorization","token","responseJson","json","ok"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/hooks/message/useGetMessages.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport useAuthContext from \"../context/useAuthContext\";\r\nimport useMessage from \"../zustand/useMessage\";\r\n\r\n\r\n\r\nconst useGetMessages = () => {\r\n  //loading and error state\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  //custom hooks context\r\n  const { user } = useAuthContext();\r\n  const { setMessages, messages } = useMessage();\r\n\r\n  //react router\r\n  const { conversationId } = useParams();\r\n\r\n  useEffect(() => {\r\n\r\n    const getMessages = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(`/api/messages/${conversationId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      });\r\n      const responseJson = await response.json();\r\n\r\n      \r\n      if (!response.ok) {\r\n        setIsLoading(false);\r\n        setError(responseJson.error);\r\n      }\r\n      \r\n      if (response.ok) {\r\n        // setting the messages we retrieved from the db\r\n        setMessages(responseJson)\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (conversationId && user !== null){\r\n      getMessages();\r\n    }\r\n\r\n  }, [conversationId, setMessages, user]);\r\n\r\n  return { isLoading, error, messages };\r\n};\r\nexport default useGetMessages;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,UAAU,MAAM,uBAAuB;AAI9C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM;IAAEU;EAAK,CAAC,GAAGR,cAAc,CAAC,CAAC;EACjC,MAAM;IAAES,WAAW;IAAEC;EAAS,CAAC,GAAGT,UAAU,CAAC,CAAC;;EAE9C;EACA,MAAM;IAAEU;EAAe,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAEtCF,SAAS,CAAC,MAAM;IAEd,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BP,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgBH,cAAe,EAAC,EAAE;QAC9DI,OAAO,EAAE;UACPC,aAAa,EAAG,UAASR,IAAI,CAACS,KAAM;QACtC;MACF,CAAC,CAAC;MACF,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAG1C,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChBf,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACW,YAAY,CAACZ,KAAK,CAAC;MAC9B;MAEA,IAAIO,QAAQ,CAACO,EAAE,EAAE;QACf;QACAX,WAAW,CAACS,YAAY,CAAC;QACzBb,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAED,IAAIM,cAAc,IAAIH,IAAI,KAAK,IAAI,EAAC;MAClCI,WAAW,CAAC,CAAC;IACf;EAEF,CAAC,EAAE,CAACD,cAAc,EAAEF,WAAW,EAAED,IAAI,CAAC,CAAC;EAEvC,OAAO;IAAEJ,SAAS;IAAEE,KAAK;IAAEI;EAAS,CAAC;AACvC,CAAC;AAACP,EAAA,CA7CID,cAAc;EAAA,QAMDF,cAAc,EACGC,UAAU,EAGjBF,SAAS;AAAA;AAoCtC,eAAeG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}