{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luca\\\\Documents\\\\Websites\\\\SERN-app\\\\frontend\\\\src\\\\components\\\\home\\\\chat\\\\Input.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSendMessage } from '../../../hooks/message/useSendMessage';\nimport useConversation from '../../../hooks/zustand/useConversation.js';\nimport \"./Chat.css\";\nimport \"./ToggleSwitch.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = () => {\n  _s();\n  //state\n  const [newMessage, setNewMessage] = useState('');\n  const [isFuture, setIsFuture] = useState(false);\n\n  //custom hooks\n  const {\n    isLoading,\n    sendMessage\n  } = useSendMessage();\n\n  // zustand \n  const {\n    selectedConversation\n  } = useConversation();\n  const toggleSwitch = () => {\n    setIsFuture(!isFuture);\n  };\n  const handleMessageChange = e => {\n    setNewMessage(e.target.value);\n  };\n  const handleSendMessage = async () => {\n    if (newMessage.trim() === \"\") return;\n\n    // Send the message\n    await sendMessage(selectedConversation.id, newMessage, isFuture);\n\n    // Clear the input field and toggle state\n    setNewMessage(\"\");\n    setIsFuture(!isFuture);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: toggleSwitch,\n        checked: isFuture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: handleMessageChange,\n        placeholder: \"Type your message...\",\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault(); // Prevent form submission\n            handleSendMessage();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: !newMessage.trim(),\n        children: isLoading ? \"is sending...\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"Y4Z7XeJJfi6HNYRLMcU3x6azER0=\", false, function () {\n  return [useSendMessage, useConversation];\n});\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","useSendMessage","useConversation","jsxDEV","_jsxDEV","Input","_s","newMessage","setNewMessage","isFuture","setIsFuture","isLoading","sendMessage","selectedConversation","toggleSwitch","handleMessageChange","e","target","value","handleSendMessage","trim","id","className","children","type","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onKeyDown","key","preventDefault","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/components/home/chat/Input.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSendMessage } from '../../../hooks/message/useSendMessage';\r\nimport useConversation from '../../../hooks/zustand/useConversation.js';\r\n\r\nimport \"./Chat.css\"\r\nimport \"./ToggleSwitch.css\"\r\n\r\nconst Input = () => {\r\n  //state\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isFuture, setIsFuture] = useState(false);\r\n\r\n  //custom hooks\r\n  const { isLoading, sendMessage } = useSendMessage();\r\n\r\n  // zustand \r\n  const { selectedConversation } = useConversation();\r\n\r\n\r\n  const toggleSwitch = () => {\r\n    setIsFuture(!isFuture);\r\n  };\r\n\r\n  const handleMessageChange = (e) => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (newMessage.trim() === \"\") return;\r\n  \r\n    // Send the message\r\n    await sendMessage(selectedConversation.id, newMessage, isFuture);\r\n  \r\n    // Clear the input field and toggle state\r\n    setNewMessage(\"\");\r\n    setIsFuture(!isFuture);\r\n  };\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"input-container\">\r\n      <label className=\"switch\">\r\n        <input type=\"checkbox\" onChange={toggleSwitch} checked={isFuture} />\r\n        <span className=\"slider\"></span>\r\n      </label>\r\n      <div className=\"input-field\">\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={handleMessageChange}\r\n          placeholder=\"Type your message...\"\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              e.preventDefault(); // Prevent form submission\r\n              handleSendMessage();\r\n            }\r\n          }}\r\n        />\r\n        <button onClick={handleSendMessage} disabled={!newMessage.trim()}>\r\n          {isLoading ? \"is sending...\" : \"Send\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,uCAAuC;AACtE,OAAOC,eAAe,MAAM,2CAA2C;AAEvE,OAAO,YAAY;AACnB,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAM;IAAEW,SAAS;IAAEC;EAAY,CAAC,GAAGX,cAAc,CAAC,CAAC;;EAEnD;EACA,MAAM;IAAEY;EAAqB,CAAC,GAAGX,eAAe,CAAC,CAAC;EAGlD,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBJ,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,MAAMM,mBAAmB,GAAIC,CAAC,IAAK;IACjCR,aAAa,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIZ,UAAU,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;;IAE9B;IACA,MAAMR,WAAW,CAACC,oBAAoB,CAACQ,EAAE,EAAEd,UAAU,EAAEE,QAAQ,CAAC;;IAEhE;IACAD,aAAa,CAAC,EAAE,CAAC;IACjBE,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAKD,oBACEL,OAAA;IAAKkB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BnB,OAAA;MAAOkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACvBnB,OAAA;QAAOoB,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAEX,YAAa;QAACY,OAAO,EAAEjB;MAAS;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpE1B,OAAA;QAAMkB,SAAS,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACR1B,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BnB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXN,KAAK,EAAEX,UAAW;QAClBkB,QAAQ,EAAEV,mBAAoB;QAC9BgB,WAAW,EAAC,sBAAsB;QAClCC,SAAS,EAAGhB,CAAC,IAAK;UAChB,IAAIA,CAAC,CAACiB,GAAG,KAAK,OAAO,EAAE;YACrBjB,CAAC,CAACkB,cAAc,CAAC,CAAC,CAAC,CAAC;YACpBf,iBAAiB,CAAC,CAAC;UACrB;QACF;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACF1B,OAAA;QAAQ+B,OAAO,EAAEhB,iBAAkB;QAACiB,QAAQ,EAAE,CAAC7B,UAAU,CAACa,IAAI,CAAC,CAAE;QAAAG,QAAA,EAC9DZ,SAAS,GAAG,eAAe,GAAG;MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA3DID,KAAK;EAAA,QAM0BJ,cAAc,EAGhBC,eAAe;AAAA;AAAAmC,EAAA,GAT5ChC,KAAK;AA6DX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}