{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luca\\\\Documents\\\\Websites\\\\SERN-app\\\\frontend\\\\src\\\\components\\\\verification\\\\OtpRequest.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useOtpRequest } from \"../../hooks/verification/useOtpRequest\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpRequest = ({\n  handleOtpRequest,\n  isNewUser\n}) => {\n  _s();\n  const {\n    otpRequest,\n    error,\n    isLoading\n  } = useOtpRequest();\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    setSubmitting(false);\n    try {\n      const isRequested = await otpRequest(values.email, isNewUser);\n      if (isRequested) {\n        handleOtpRequest(values.email, isRequested);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const initialValues = {\n    email: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: isLoading ? \"Sending...\" : \"Send code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpRequest, \"MAIHCNElm2mEZAKJAt6WkoU+bXA=\", false, function () {\n  return [useOtpRequest];\n});\n_c = OtpRequest;\nexport default OtpRequest;\nvar _c;\n$RefreshReg$(_c, \"OtpRequest\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","useOtpRequest","Yup","jsxDEV","_jsxDEV","OtpRequest","handleOtpRequest","isNewUser","_s","otpRequest","error","isLoading","handleSubmit","values","setSubmitting","isRequested","email","console","log","initialValues","validationSchema","object","shape","string","required","children","onSubmit","isSubmitting","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","component","disabled","_c","$RefreshReg$"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/components/verification/OtpRequest.js"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { useOtpRequest } from \"../../hooks/verification/useOtpRequest\";\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nconst OtpRequest = ({handleOtpRequest, isNewUser}) => {\r\n\r\n  const { otpRequest, error, isLoading } = useOtpRequest();\r\n\r\n  const handleSubmit = async ( values, { setSubmitting }) => {\r\n\r\n    setSubmitting(false);\r\n\r\n    try {\r\n\r\n      const isRequested = await otpRequest(values.email, isNewUser);\r\n      \r\n      if (isRequested){\r\n        handleOtpRequest(values.email, isRequested);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  });\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <div>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Field type=\"email\" name=\"email\" />\r\n              <ErrorMessage name=\"email\" component=\"div\" />\r\n            </div>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              {isLoading ? \"Sending...\" : \"Send code\"}\r\n            </button>\r\n            {error && <div>{error}</div>}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpRequest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}