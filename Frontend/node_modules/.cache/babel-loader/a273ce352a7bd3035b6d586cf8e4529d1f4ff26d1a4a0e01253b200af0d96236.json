{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luca\\\\Documents\\\\Websites\\\\SERN-app\\\\frontend\\\\src\\\\components\\\\verification\\\\OtpVerification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './OtpVerification.css'; // Import the CSS file for styling\nimport { useOtpVerification } from '../../hooks/verification/useOtpVerification';\nimport useVerificationContext from \"../../hooks/context/useVerificationContext\";\nimport { useOtpRequest } from \"../../hooks/verification/useOtpRequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpVerification = ({\n  handleVerifyOtp,\n  handleChangeEmail\n}) => {\n  _s();\n  //TODO: #2 add otprequest errors\n\n  const [otp, setOTP] = useState(['', '', '', '', '', '']);\n  const [resendSuccess, setResendSuccess] = useState(false); // State for showing resend success popup\n  const inputsRef = [useRef(), useRef(), useRef(), useRef(), useRef(), useRef()];\n  const {\n    otpVerification,\n    error,\n    isLoading\n  } = useOtpVerification();\n  const {\n    verification\n  } = useVerificationContext();\n  const {\n    otpRequest\n  } = useOtpRequest();\n  const handleChange = (index, value) => {\n    if (isNaN(value)) return;\n    const newOTP = [...otp];\n    newOTP[index] = value;\n    setOTP(newOTP);\n\n    // Move focus to the next input field if a digit is entered\n    if (value !== '' && index < 5) {\n      inputsRef[index + 1].current.focus();\n    }\n  };\n  const handleKeyDown = (index, e) => {\n    if (e.key === 'Backspace' && index > 0 && otp[index] === '') {\n      // Move focus to the previous input field on backspace if the current input is empty\n      inputsRef[index - 1].current.focus();\n    }\n  };\n  const handleVerify = async () => {\n    const inputOtpInt = otp.join('');\n    const inputOtp = inputOtpInt.toString();\n    try {\n      const isVerified = await otpVerification(inputOtp);\n      if (isVerified) {\n        handleVerifyOtp(isVerified);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleChangeEmailClick = async () => {\n    handleChangeEmail();\n  };\n  const handleResend = async () => {\n    try {\n      await otpRequest(verification.user.email, true);\n      console.log(verification.user.email);\n      setResendSuccess(true); // Set resend success to true to show the popup\n\n      // Hide the success message after 4 seconds\n      setTimeout(() => {\n        setResendSuccess(false);\n      }, 6000);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Check your email inbox. We have sent a 6-digit verification code to\", verification.user.email, \". This code will expire in 15 minutes. \", /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: handleChangeEmailClick,\n        children: \"Change email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter the 6-digit code sent to your email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"otp-input-container\",\n      children: otp.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputsRef[index],\n        type: \"text\",\n        className: \"otp-input\",\n        inputMode: \"numeric\",\n        maxLength: \"1\",\n        value: value,\n        onChange: e => handleChange(index, e.target.value),\n        onKeyDown: e => handleKeyDown(index, e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading,\n      className: \"verify-button\",\n      onClick: handleVerify,\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"resend-text\",\n      children: [\"Didn't receive a code?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: handleResend,\n        children: \"Request again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), resendSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: \" Your new verification code has been sent to the provided email address. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpVerification, \"gWOQlpywu2qV6a/OjxiBNc9exqM=\", false, function () {\n  return [useOtpVerification, useVerificationContext, useOtpRequest];\n});\n_c = OtpVerification;\nexport default OtpVerification;\nvar _c;\n$RefreshReg$(_c, \"OtpVerification\");","map":{"version":3,"names":["React","useState","useRef","useOtpVerification","useVerificationContext","useOtpRequest","jsxDEV","_jsxDEV","OtpVerification","handleVerifyOtp","handleChangeEmail","_s","otp","setOTP","resendSuccess","setResendSuccess","inputsRef","otpVerification","error","isLoading","verification","otpRequest","handleChange","index","value","isNaN","newOTP","current","focus","handleKeyDown","e","key","handleVerify","inputOtpInt","join","inputOtp","toString","isVerified","console","log","handleChangeEmailClick","handleResend","user","email","setTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","type","inputMode","maxLength","onChange","target","onKeyDown","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/components/verification/OtpVerification.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './OtpVerification.css'; // Import the CSS file for styling\r\nimport { useOtpVerification } from '../../hooks/verification/useOtpVerification';\r\nimport useVerificationContext from \"../../hooks/context/useVerificationContext\";\r\nimport { useOtpRequest } from \"../../hooks/verification/useOtpRequest\";\r\n\r\nconst OtpVerification = ({ handleVerifyOtp, handleChangeEmail }) => { //TODO: #2 add otprequest errors\r\n\r\n  const [otp, setOTP] = useState(['', '', '', '', '', '']);\r\n  const [resendSuccess, setResendSuccess] = useState(false); // State for showing resend success popup\r\n  const inputsRef = [useRef(), useRef(), useRef(), useRef(), useRef(), useRef()];\r\n  const { otpVerification, error, isLoading } = useOtpVerification();\r\n  const { verification } = useVerificationContext();\r\n  const { otpRequest, } = useOtpRequest();\r\n\r\n  const handleChange = (index, value) => {\r\n    if (isNaN(value)) return;\r\n    const newOTP = [...otp];\r\n    newOTP[index] = value;\r\n    setOTP(newOTP);\r\n\r\n    // Move focus to the next input field if a digit is entered\r\n    if (value !== '' && index < 5) {\r\n      inputsRef[index + 1].current.focus();\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (index, e) => {\r\n    if (e.key === 'Backspace' && index > 0 && otp[index] === '') {\r\n      // Move focus to the previous input field on backspace if the current input is empty\r\n      inputsRef[index - 1].current.focus();\r\n    }\r\n  };\r\n\r\n  const handleVerify = async () => {\r\n    const inputOtpInt = otp.join('');\r\n    const inputOtp = inputOtpInt.toString();\r\n\r\n    try {\r\n  \r\n      const isVerified = await otpVerification(inputOtp);\r\n\r\n      if (isVerified) {\r\n        handleVerifyOtp(isVerified)\r\n      }\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleChangeEmailClick = async () => {\r\n    handleChangeEmail()\r\n  }\r\n\r\n  const handleResend = async () => {\r\n    try {\r\n\r\n      await otpRequest(verification.user.email, true);\r\n      console.log(verification.user.email)\r\n\r\n      setResendSuccess(true); // Set resend success to true to show the popup\r\n\r\n      // Hide the success message after 4 seconds\r\n      setTimeout(() => {\r\n        setResendSuccess(false);\r\n      }, 6000);\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"otp-container\">\r\n      <p>\r\n        Check your email inbox. We have sent a 6-digit verification code to\r\n        {verification.user.email}. This code will expire in 15 minutes. <a onClick={handleChangeEmailClick} >Change email</a>\r\n      </p>\r\n      <p>Please enter the 6-digit code sent to your email.</p>\r\n      <div className=\"otp-input-container\">\r\n        {otp.map((value, index) => (\r\n          <input\r\n            key={index}\r\n            ref={inputsRef[index]}\r\n            type=\"text\"\r\n            className=\"otp-input\"\r\n            inputMode=\"numeric\"\r\n            maxLength=\"1\"\r\n            value={value}\r\n            onChange={(e) => handleChange(index, e.target.value)}\r\n            onKeyDown={(e) => handleKeyDown(index, e)}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button\r\n        disabled={isLoading}\r\n        className=\"verify-button\"\r\n        onClick={handleVerify}\r\n      >\r\n        Verify\r\n      </button>\r\n      <p className=\"resend-text\">\r\n        Didn't receive a code?{\" \"}\r\n        <a href=\"#\" onClick={handleResend}>\r\n          Request again\r\n        </a>\r\n      </p>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {resendSuccess && (\r\n        <div className=\"popup\"> Your new verification code has been sent to the provided email address. </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OtpVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}