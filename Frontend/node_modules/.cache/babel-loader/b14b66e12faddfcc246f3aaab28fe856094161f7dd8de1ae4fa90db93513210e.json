{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luca\\\\Documents\\\\Websites\\\\SERN-app\\\\frontend\\\\src\\\\pages\\\\ProductPage.js\",\n  _s = $RefreshSig$();\n// ProductPage.js\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductPage = () => {\n  _s();\n  const {\n    productId\n  } = useParams();\n\n  // Sample product data (you may want to fetch it dynamically)\n  const products = [{\n    id: 1,\n    title: \"RWK Black T-Shirt\",\n    description: \"A cool black t-shirt\",\n    image: \"/path/to/image1.png\",\n    price: \"$25\"\n  }, {\n    id: 2,\n    title: \"RWK White T-Shirt\",\n    description: \"A cool white t-shirt\",\n    image: \"/path/to/image2.png\",\n    price: \"$25\"\n  }\n  // Add more products here\n  ];\n\n  // Find the selected product based on the productId from the URL\n  const product = products.find(p => p.id === parseInt(productId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-page\",\n    children: product ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: product.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.image,\n        alt: product.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"Buy Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Product not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductPage, \"QX76Lr8G00NVlyiWUU0JNEO3QJE=\", false, function () {\n  return [useParams];\n});\n_c = ProductPage;\nexport default ProductPage;\nvar _c;\n$RefreshReg$(_c, \"ProductPage\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductPage","_s","productId","products","id","title","description","image","price","product","find","p","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/pages/ProductPage.js"],"sourcesContent":["// ProductPage.js\r\n\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ProductPage = () => {\r\n  const { productId } = useParams();\r\n\r\n  // Sample product data (you may want to fetch it dynamically)\r\n  const products = [\r\n    { id: 1, title: \"RWK Black T-Shirt\", description: \"A cool black t-shirt\", image: \"/path/to/image1.png\", price: \"$25\" },\r\n    { id: 2, title: \"RWK White T-Shirt\", description: \"A cool white t-shirt\", image: \"/path/to/image2.png\", price: \"$25\" },\r\n    // Add more products here\r\n  ];\r\n\r\n  // Find the selected product based on the productId from the URL\r\n  const product = products.find(p => p.id === parseInt(productId));\r\n\r\n  return (\r\n    <div className=\"product-page\">\r\n      {product ? (\r\n        <>\r\n          <h2>{product.title}</h2>\r\n          <img src={product.image} alt={product.title} />\r\n          <p>{product.description}</p>\r\n          <p>{product.price}</p>\r\n          <button className=\"button\">Buy Now</button>\r\n        </>\r\n      ) : (\r\n        <p>Product not found!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;;EAEjC;EACA,MAAMQ,QAAQ,GAAG,CACf;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,WAAW,EAAE,sBAAsB;IAAEC,KAAK,EAAE,qBAAqB;IAAEC,KAAK,EAAE;EAAM,CAAC,EACtH;IAAEJ,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,WAAW,EAAE,sBAAsB;IAAEC,KAAK,EAAE,qBAAqB;IAAEC,KAAK,EAAE;EAAM;EACrH;EAAA,CACD;;EAED;EACA,MAAMC,OAAO,GAAGN,QAAQ,CAACO,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACP,EAAE,KAAKQ,QAAQ,CAACV,SAAS,CAAC,CAAC;EAEhE,oBACEL,OAAA;IAAKgB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BL,OAAO,gBACNZ,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAKL,OAAO,CAACJ;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBrB,OAAA;QAAKsB,GAAG,EAAEV,OAAO,CAACF,KAAM;QAACa,GAAG,EAAEX,OAAO,CAACJ;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CrB,OAAA;QAAAiB,QAAA,EAAIL,OAAO,CAACH;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BrB,OAAA;QAAAiB,QAAA,EAAIL,OAAO,CAACD;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBrB,OAAA;QAAQgB,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC3C,CAAC,gBAEHrB,OAAA;MAAAiB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA5BID,WAAW;EAAA,QACOL,SAAS;AAAA;AAAA0B,EAAA,GAD3BrB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}