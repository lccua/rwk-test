{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useVerificationContext from \"../context/useVerificationContext\";\nexport const useOtpRequest = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useVerificationContext();\n  const otpRequest = async (email, isNewUser) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(\"/api/user/otp-request\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        isNewUser\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n      return false;\n    }\n    if (response.ok) {\n      dispatch({\n        type: \"SET_VERIFICATION\",\n        payload: json\n      });\n      setIsLoading(false);\n      return true;\n    }\n  };\n  return {\n    otpRequest,\n    isLoading,\n    error\n  };\n};\n_s(useOtpRequest, \"5rHRMj96Sn7LA0sTCDhfcQDwh9s=\", false, function () {\n  return [useVerificationContext];\n});","map":{"version":3,"names":["useState","useVerificationContext","useOtpRequest","_s","error","setError","isLoading","setIsLoading","dispatch","otpRequest","email","isNewUser","response","fetch","method","headers","body","JSON","stringify","json","ok","type","payload"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/hooks/verification/useOtpRequest.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport useVerificationContext from \"../context/useVerificationContext\";\r\n\r\n\r\nexport const useOtpRequest = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const { dispatch } = useVerificationContext()\r\n\r\n\r\n  const otpRequest = async (email, isNewUser) => {\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const response = await fetch(\"/api/user/otp-request\", {\r\n\r\n      method: \"POST\",\r\n      headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      },\r\n      \r\n      body: JSON.stringify({ email, isNewUser }),\r\n      \r\n    });\r\n    \r\n    const json = await response.json();\r\n    \r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false);\r\n      setError(json.error);\r\n      return false;\r\n    }\r\n\r\n    if (response.ok) {\r\n\r\n      dispatch({ type: \"SET_VERIFICATION\", payload: json });\r\n      setIsLoading(false);\r\n      return true;\r\n    }\r\n  };\r\n  return { otpRequest, isLoading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,sBAAsB,MAAM,mCAAmC;AAGtE,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,sBAAsB,CAAC,CAAC;EAG7C,MAAMQ,UAAU,GAAG,MAAAA,CAAOC,KAAK,EAAEC,SAAS,KAAK;IAE7CJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;MAEpDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MAEDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAU,CAAC;IAE3C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAGlC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChBb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;MACpB,OAAO,KAAK;IACd;IAEA,IAAIQ,QAAQ,CAACQ,EAAE,EAAE;MAEfZ,QAAQ,CAAC;QAAEa,IAAI,EAAE,kBAAkB;QAAEC,OAAO,EAAEH;MAAK,CAAC,CAAC;MACrDZ,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,IAAI;IACb;EACF,CAAC;EACD,OAAO;IAAEE,UAAU;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACzC,CAAC;AAACD,EAAA,CAvCWD,aAAa;EAAA,QAGHD,sBAAsB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}