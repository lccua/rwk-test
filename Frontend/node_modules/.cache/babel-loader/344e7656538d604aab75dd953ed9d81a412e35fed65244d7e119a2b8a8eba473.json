{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useAuthContext from \"../context/useAuthContext\";\nimport useConversation from \"../zustand/useConversation\";\nexport const useGetConversations = () => {\n  _s();\n  // loading and error state\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // context\n  const {\n    user\n  } = useAuthContext();\n  const {\n    setConversations,\n    conversations\n  } = useConversation();\n  useEffect(() => {\n    const getConversations = async () => {\n      setIsLoading(true);\n      setError(null);\n      const response = await fetch(\"/api/conversations\", {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const responseJson = await response.json();\n      if (!response.ok) {\n        setIsLoading(false);\n        setError(responseJson.error);\n      }\n      if (response.ok) {\n        // set the conversations only if they are not already set\n        setConversations(responseJson);\n      }\n      setIsLoading(false);\n    };\n    if (user !== null) {\n      getConversations();\n    }\n  }, [setConversations, user]);\n  return {\n    isLoading,\n    error,\n    conversations\n  };\n};\n_s(useGetConversations, \"JUH1o4Y5VqwclqvWAaiojzlHsmk=\", false, function () {\n  return [useAuthContext, useConversation];\n});","map":{"version":3,"names":["useEffect","useState","useAuthContext","useConversation","useGetConversations","_s","isLoading","setIsLoading","error","setError","user","setConversations","conversations","getConversations","response","fetch","headers","Authorization","token","responseJson","json","ok"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/hooks/conversation/useGetConversations.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport useAuthContext from \"../context/useAuthContext\";\r\nimport useConversation from \"../zustand/useConversation\";\r\n\r\nexport const useGetConversations = () => {\r\n  // loading and error state\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // context\r\n  const { user } = useAuthContext();\r\n  const { setConversations, conversations } = useConversation();\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(\"/api/conversations\", {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      });\r\n\r\n      const responseJson = await response.json();\r\n\r\n      if (!response.ok) {\r\n        setIsLoading(false);\r\n        setError(responseJson.error);\r\n      }\r\n\r\n      if (response.ok) {\r\n        // set the conversations only if they are not already set\r\n        setConversations(responseJson)\r\n      }\r\n\r\n      setIsLoading(false);\r\n    };\r\n    if (user !== null) {\r\n      getConversations();\r\n    }\r\n  }, [setConversations, user]);\r\n\r\n  return { isLoading, error, conversations };\r\n};\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,eAAe,MAAM,4BAA4B;AAExD,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM;IAAES;EAAK,CAAC,GAAGR,cAAc,CAAC,CAAC;EACjC,MAAM;IAAES,gBAAgB;IAAEC;EAAc,CAAC,GAAGT,eAAe,CAAC,CAAC;EAE7DH,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnCN,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;QACjDC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASP,IAAI,CAACQ,KAAM;QACtC;MACF,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAE1C,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChBd,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACU,YAAY,CAACX,KAAK,CAAC;MAC9B;MAEA,IAAIM,QAAQ,CAACO,EAAE,EAAE;QACf;QACAV,gBAAgB,CAACQ,YAAY,CAAC;MAChC;MAEAZ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IACD,IAAIG,IAAI,KAAK,IAAI,EAAE;MACjBG,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACF,gBAAgB,EAAED,IAAI,CAAC,CAAC;EAE5B,OAAO;IAAEJ,SAAS;IAAEE,KAAK;IAAEI;EAAc,CAAC;AAC5C,CAAC;AAACP,EAAA,CAxCWD,mBAAmB;EAAA,QAMbF,cAAc,EACaC,eAAe;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}