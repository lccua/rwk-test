{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luca\\\\Documents\\\\Websites\\\\SERN-app\\\\frontend\\\\src\\\\components\\\\verification\\\\PasswordReset.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { usePasswordReset } from \"../../hooks/authentication/userPasswordReset\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const initialValues = {\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const {\n    passwordReset,\n    error,\n    isLoading\n  } = usePasswordReset();\n  const validationSchema = Yup.object().shape({\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Confirm Password is required\")\n  });\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    // Handle form submission here\n    setSubmitting(false);\n    try {\n      await passwordReset(values.password);\n    } catch (error) {\n      console.error(\"Signup failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Reset your password here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"confirmPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"confirmPassword\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: isLoading ? \"Registering...\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"t3i6uMLn+tHn7rmrAREMQjBWpSk=\", false, function () {\n  return [usePasswordReset];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","usePasswordReset","jsxDEV","_jsxDEV","PasswordReset","_s","initialValues","password","confirmPassword","passwordReset","error","isLoading","validationSchema","object","shape","string","min","required","oneOf","ref","handleSubmit","values","setSubmitting","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","isSubmitting","htmlFor","type","name","component","disabled","_c","$RefreshReg$"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/components/verification/PasswordReset.js"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { usePasswordReset } from \"../../hooks/authentication/userPasswordReset\";\r\n\r\n\r\n\r\n\r\nconst PasswordReset = () => {\r\n  const initialValues = {\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n  const { passwordReset, error, isLoading } = usePasswordReset();\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Confirm Password is required\"),\r\n  });\r\n\r\n  const handleSubmit = async (values, { setSubmitting }) => {\r\n    // Handle form submission here\r\n    setSubmitting(false);\r\n\r\n    try {\r\n      await passwordReset(values.password);\r\n    } catch (error) {\r\n      console.error(\"Signup failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Reset your password here.</p>\r\n      \r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <div>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field type=\"password\" name=\"password\" />\r\n              <ErrorMessage name=\"password\" component=\"div\" />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n              <Field type=\"password\" name=\"confirmPassword\" />\r\n              <ErrorMessage name=\"confirmPassword\" component=\"div\" />\r\n            </div>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              {isLoading ? \"Registering...\" : \"Register\"}\r\n            </button>\r\n            {error && <div>{error}</div>}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,gBAAgB,QAAQ,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKhF,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,aAAa,GAAG;IACpBC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC;EACD,MAAM;IAAEC,aAAa;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGV,gBAAgB,CAAC,CAAC;EAE9D,MAAMW,gBAAgB,GAAGZ,GAAG,CAACa,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;IAC1CP,QAAQ,EAAEP,GAAG,CAACe,MAAM,CAAC,CAAC,CACnBC,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDC,QAAQ,CAAC,sBAAsB,CAAC;IACnCT,eAAe,EAAER,GAAG,CAACe,MAAM,CAAC,CAAC,CAC1BG,KAAK,CAAC,CAAClB,GAAG,CAACmB,GAAG,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,sBAAsB,CAAC,CAC1DF,QAAQ,CAAC,8BAA8B;EAC5C,CAAC,CAAC;EAEF,MAAMG,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAE;IAAEC;EAAc,CAAC,KAAK;IACxD;IACAA,aAAa,CAAC,KAAK,CAAC;IAEpB,IAAI;MACF,MAAMb,aAAa,CAACY,MAAM,CAACd,QAAQ,CAAC;IACtC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,oBACEP,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEhCzB,OAAA,CAACP,MAAM;MACLU,aAAa,EAAEA,aAAc;MAC7BM,gBAAgB,EAAEA,gBAAiB;MACnCiB,QAAQ,EAAET,YAAa;MAAAI,QAAA,EAEtBA,CAAC;QAAEM;MAAa,CAAC,kBAChB3B,OAAA,CAACN,IAAI;QAAA2B,QAAA,gBACHrB,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAO4B,OAAO,EAAC,UAAU;YAAAP,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1CzB,OAAA,CAACL,KAAK;YAACkC,IAAI,EAAC,UAAU;YAACC,IAAI,EAAC;UAAU;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzCzB,OAAA,CAACJ,YAAY;YAACkC,IAAI,EAAC,UAAU;YAACC,SAAS,EAAC;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACNzB,OAAA;UAAAqB,QAAA,gBACErB,OAAA;YAAO4B,OAAO,EAAC,iBAAiB;YAAAP,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzDzB,OAAA,CAACL,KAAK;YAACkC,IAAI,EAAC,UAAU;YAACC,IAAI,EAAC;UAAiB;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChDzB,OAAA,CAACJ,YAAY;YAACkC,IAAI,EAAC,iBAAiB;YAACC,SAAS,EAAC;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACNzB,OAAA;UAAQ6B,IAAI,EAAC,QAAQ;UAACG,QAAQ,EAAEL,YAAa;UAAAN,QAAA,EAC1Cb,SAAS,GAAG,gBAAgB,GAAG;QAAU;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,EACRlB,KAAK,iBAAIP,OAAA;UAAAqB,QAAA,EAAMd;QAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CAzDID,aAAa;EAAA,QAK2BH,gBAAgB;AAAA;AAAAmC,EAAA,GALxDhC,aAAa;AA2DnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}