{"ast":null,"code":"import { create } from \"zustand\";\nconst useMessage = create(set => ({\n  messages: [],\n  setMessages: messages => set({\n    messages\n  }),\n  setNewMessage: newMessage => {\n    set(state => ({\n      messages: [...state.messages, newMessage]\n    }));\n  },\n  deleteMessageFromState: messageId => {\n    set(state => ({\n      messages: state.messages.filter(message => message.id !== messageId)\n    }));\n  }\n}));\nexport default useMessage;","map":{"version":3,"names":["create","useMessage","set","messages","setMessages","setNewMessage","newMessage","state","deleteMessageFromState","messageId","filter","message","id"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/hooks/zustand/useMessage.js"],"sourcesContent":["import { create } from \"zustand\";\r\n\r\nconst useMessage = create((set) => ({\r\n  messages: [],\r\n  \r\n  setMessages: (messages) => set({ messages }),\r\n\r\n  setNewMessage: (newMessage) => {\r\n    set((state) => ({\r\n      messages: [...state.messages, newMessage],\r\n    }));\r\n  },\r\n\r\n  deleteMessageFromState: (messageId) => {\r\n    set((state) => ({\r\n      messages: state.messages.filter(message => message.id !== messageId),\r\n    }));\r\n  },\r\n}));\r\n\r\nexport default useMessage;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,MAAMC,UAAU,GAAGD,MAAM,CAAEE,GAAG,KAAM;EAClCC,QAAQ,EAAE,EAAE;EAEZC,WAAW,EAAGD,QAAQ,IAAKD,GAAG,CAAC;IAAEC;EAAS,CAAC,CAAC;EAE5CE,aAAa,EAAGC,UAAU,IAAK;IAC7BJ,GAAG,CAAEK,KAAK,KAAM;MACdJ,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAQ,EAAEG,UAAU;IAC1C,CAAC,CAAC,CAAC;EACL,CAAC;EAEDE,sBAAsB,EAAGC,SAAS,IAAK;IACrCP,GAAG,CAAEK,KAAK,KAAM;MACdJ,QAAQ,EAAEI,KAAK,CAACJ,QAAQ,CAACO,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKH,SAAS;IACrE,CAAC,CAAC,CAAC;EACL;AACF,CAAC,CAAC,CAAC;AAEH,eAAeR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}