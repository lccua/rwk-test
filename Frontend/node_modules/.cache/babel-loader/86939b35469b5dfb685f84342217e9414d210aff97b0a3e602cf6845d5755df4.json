{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport useAuthContext from \"../context/useAuthContext\";\nimport useConversation from \"../zustand/useConversation\";\nimport { useParams } from \"react-router-dom\";\nexport const useGetConversation = () => {\n  _s();\n  // loading and error state\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // context\n  const {\n    user\n  } = useAuthContext();\n  const {\n    setSelectedConversation,\n    selectedConversation\n  } = useConversation();\n\n  // react router\n  const {\n    conversationId\n  } = useParams();\n  useEffect(() => {\n    const getConversation = async () => {\n      setIsLoading(true);\n      setError(null);\n      const response = await fetch(`/api/conversations/${conversationId}`, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const responseJson = await response.json();\n      if (!response.ok) {\n        setIsLoading(false);\n        setError(responseJson.error);\n      }\n      if (response.ok) {\n        setSelectedConversation(responseJson);\n      }\n      setIsLoading(false);\n    };\n    if (conversationId && user !== null) {\n      getConversation();\n    }\n  }, [conversationId, setSelectedConversation, user]);\n  return {\n    isLoading,\n    error,\n    selectedConversation\n  };\n};\n_s(useGetConversation, \"H4mYTrHVqJYVHfra1deAgzrvfjY=\", false, function () {\n  return [useAuthContext, useConversation, useParams];\n});","map":{"version":3,"names":["useEffect","useState","useAuthContext","useConversation","useParams","useGetConversation","_s","isLoading","setIsLoading","error","setError","user","setSelectedConversation","selectedConversation","conversationId","getConversation","response","fetch","headers","Authorization","token","responseJson","json","ok"],"sources":["C:/Users/luca/Documents/Websites/SERN-app/frontend/src/hooks/conversation/useGetConversation.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport useAuthContext from \"../context/useAuthContext\";\r\nimport useConversation from \"../zustand/useConversation\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const useGetConversation = () => {\r\n  // loading and error state\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // context\r\n  const { user } = useAuthContext();\r\n  const { setSelectedConversation, selectedConversation } = useConversation();\r\n\r\n  // react router\r\n  const { conversationId } = useParams();\r\n  \r\n\r\n  useEffect(() => {\r\n    const getConversation = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(`/api/conversations/${conversationId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      });\r\n\r\n      const responseJson = await response.json();\r\n\r\n      if (!response.ok) {\r\n        setIsLoading(false);\r\n        setError(responseJson.error);\r\n      }\r\n\r\n      if (response.ok) {\r\n        setSelectedConversation(responseJson)\r\n      }\r\n\r\n      setIsLoading(false);\r\n    };\r\n    if (conversationId && user !== null) {\r\n      getConversation();\r\n    }\r\n  }, [conversationId, setSelectedConversation, user]);\r\n\r\n  return { isLoading, error, selectedConversation };\r\n};\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,eAAe,MAAM,4BAA4B;AACxD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM;IAAEU;EAAK,CAAC,GAAGT,cAAc,CAAC,CAAC;EACjC,MAAM;IAAEU,uBAAuB;IAAEC;EAAqB,CAAC,GAAGV,eAAe,CAAC,CAAC;;EAE3E;EACA,MAAM;IAAEW;EAAe,CAAC,GAAGV,SAAS,CAAC,CAAC;EAGtCJ,SAAS,CAAC,MAAM;IACd,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClCP,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,sBAAqBH,cAAe,EAAC,EAAE;QACnEI,OAAO,EAAE;UACPC,aAAa,EAAG,UAASR,IAAI,CAACS,KAAM;QACtC;MACF,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAE1C,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChBf,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACW,YAAY,CAACZ,KAAK,CAAC;MAC9B;MAEA,IAAIO,QAAQ,CAACO,EAAE,EAAE;QACfX,uBAAuB,CAACS,YAAY,CAAC;MACvC;MAEAb,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IACD,IAAIM,cAAc,IAAIH,IAAI,KAAK,IAAI,EAAE;MACnCI,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACD,cAAc,EAAEF,uBAAuB,EAAED,IAAI,CAAC,CAAC;EAEnD,OAAO;IAAEJ,SAAS;IAAEE,KAAK;IAAEI;EAAqB,CAAC;AACnD,CAAC;AAACP,EAAA,CA3CWD,kBAAkB;EAAA,QAMZH,cAAc,EAC2BC,eAAe,EAG9CC,SAAS;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}